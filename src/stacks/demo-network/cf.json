{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Environment setup including VPC, subnets, routing table, etc.",
  "Parameters": {
    "InstanceCount": {
      "Type" : "Number",
      "Default" : "1",
      "Description" : "The desired number of Bastion instances. Default provided."
    },
  },
  "Resources": {
    "VPC": {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsSupport" : true,
        "EnableDnsHostnames" : true,
        "Tags": [
          { "Key": "Name", "Value": "demo" }
        ]
      }
    },
    "InternetGateway": {
      "Type" : "AWS::EC2::InternetGateway"
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": { "Ref": "InternetGateway" },
        "VpcId": { "Ref": "VPC" }
      }
    },
    "PublicSubnetA": {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
          "CidrBlock" : "10.0.1.0/24",
          "MapPublicIpOnLaunch" : true,
          "VpcId" : { "Ref" : "VPC" },
          "Tags": [
            { "Key": "Name", "Value": "demo-public-subnet-a" }
          ]
       }
    },
    "PublicSubnetB": {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
          "CidrBlock" : "10.0.2.0/24",
          "MapPublicIpOnLaunch" : true,
          "VpcId" : { "Ref" : "VPC" },
          "Tags": [
            { "Key": "Name", "Value": "demo-public-subnet-b" }
          ]
       }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          { "Key": "Name", "Value": "demo-public" }
        ]
      }
    },

    "PublicRouteTableAssociationA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "SubnetId": { "Ref": "PublicSubnetA" }
      }
    },

    "PublicRouteTableAssociationB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "SubnetId": { "Ref": "PublicSubnetB" }
      }
    },

    "PublicSubnetGatewayTrafficRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      },
      "Metadata": {
        "DependsOn": ["PublicSubnet", "InternetGatewayAttachment"]
      }
    },

    "PrivateSubnetA": {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
          "CidrBlock" : "10.0.3.0/24",
          "MapPublicIpOnLaunch" : false,
          "VpcId" : { "Ref" : "VPC" },
          "Tags": [
            { "Key": "Name", "Value": "demo-private-subnet-a" }
          ]
       }
    },

    "PrivateSubnetB": {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
          "CidrBlock" : "10.0.4.0/24",
          "MapPublicIpOnLaunch" : true,
          "VpcId" : { "Ref" : "VPC" },
          "Tags": [
            { "Key": "Name", "Value": "demo-private-subnet-b" }
          ]
       }
    },

    "RouteTablePrivateA": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [{ "Key": "Name", "Value": "demo-private-a" }]
      }
    },

    "RouteTablePrivateB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [{ "Key": "Name", "Value": "demo-private-b" }]
      }
    },

    "RouteTablePrivateAAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetA" },
        "RouteTableId": { "Ref": "RouteTablePrivateA" }
      }
    },

    "RouteTablePrivateBAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetB" },
        "RouteTableId": { "Ref": "RouteTablePrivateB" }
      }
    },

    "NatGatewayAIp": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayBIp": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatGatewayA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt" : ["NatGatewayAIp", "AllocationId"]},
        "SubnetId": { "Ref": "PublicSubnetA" }
      }
    },

    "NatGatewayB": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt" : ["NatGatewayBIp", "AllocationId"]},
        "SubnetId": { "Ref": "PublicSubnetB" }
      }
    },

    "NatTrafficRoutePrivateSubnetA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayA" },
        "RouteTableId": { "Ref": "RouteTablePrivateA" }
      }
    },
    "NatTrafficRoutePrivateSubnetB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NatGatewayB" },
        "RouteTableId": { "Ref": "RouteTablePrivateB" }
      }
    },

    "BastionSshAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Bastion SSH access via port 22",
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": 22,
          "ToPort": 22,
          "CidrIp": "0.0.0.0/0"
        }],
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          { "Key": "Name", "Value": "demo-bastion-sg" }
        ]
      }
    },

    "BastionLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "ImageId": "ami-8fcee4e5",
        "InstanceType": "t2.nano",
        "KeyName": "tw-dev",
        "SecurityGroups": [
          { "Ref": "BastionSshAccessSecurityGroup" }
        ]
      },
      "Metadata": {
        "DependsOn": "InternetGatewayAttachment"
      }
    },

    "BastionAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
          { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
        ],
        "DesiredCapacity": { "Key": "InstanceCount" },
        "LaunchConfigurationName": { "Ref": "BastionLaunchConfiguration" },
        "MaxSize": "2",
        "MinSize": "1",
        "VPCZoneIdentifier": [{ "Ref": "PublicSubnetA" }, { "Ref": "PublicSubnetB" }],
        "Tags": [
          { "Key": "Name", "Value": "demo-bastion", "PropagateAtLaunch": true }
        ]
      }
    }
  },
  "Outputs": {
    "VpcId": {
      "Value": { "Ref": "VPC" }
    },
    "PublicSubnetAId": {
      "Value": { "Ref": "PublicSubnetA" }
    },
    "PublicSubnetBId": {
      "Value": { "Ref": "PublicSubnetB" }
    },
    "PrivateSubnetAId": {
      "Value": { "Ref": "PrivateSubnetA" }
    },
    "PrivateSubnetBId": {
      "Value": { "Ref": "PrivateSubnetB" }
    }
  }
}
